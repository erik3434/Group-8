#!python3
import rclpy
from rclpy.node import Node
from sensor_msgs.msg import LaserScan, PointCloud
import math
from geometry_msgs.msg import *

class ScanIdentify(Node):

    def __init__(self):
        super().__init__('reactive_move_node')
        self.create_subscription( PointCloud, '/scan_node', self.rectangle, 10)
        self.points = []
        self.scan_publisher = self.create_publisher(Twist, '/multi/cmd_nav', 10)

    def rectangle(self, scanMsg):
        for aPoint in scanMsg.points :
            if aPoint.x > 0 and aPoint.x < 0.3:
             if -0.25 < aPoint.y and aPoint.y < 0.25:
                print('Stop')
                
        pointcloud = PointCloud()
        pointcloud.points = self.points
        pointcloud.header.frame_id = "laser"


        self.scan_publisher.publish(pointcloud)

def main(args=None):
    rclpy.init(args=args)
    scanInterpret = ScanIdentify()
    rclpy.spin(ScanIdentify)
    scanInterpret.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__' :
    main()
